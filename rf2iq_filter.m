function amp = rf2iq_filter(rf0,fs,mixFrq)
global plot_on

% rf0 = rf0 ./ sqrt(sum(rf0.^2)/length(rf0));
% window = hamming(length(rf0),'periodic');
% rf0 = rf0(:) .* window(:);

bandpass_filter = designfilt('bandpassiir', ...
    'StopbandFrequency1',max(mixFrq-0.50e6,0.2e6),...
    'PassbandFrequency1',mixFrq-0.25e6,...
    'PassbandFrequency2',mixFrq+0.25e6,...
    'StopbandFrequency2',mixFrq+0.50e6,...
    'DesignMethod','butter',...
    'StopbandAttenuation1',30,...
    'StopbandAttenuation2',30,...
    'PassbandRipple',5,...
    'SampleRate',fs);
% fvtool(bandpass_filter);
rf = filtfilt(bandpass_filter,rf0);

nSamples = length(rf);
aTime = (0:nSamples-1)' / fs; %time
aLine = rf(:);

% IQ = aLine .* exp(-1i * 2.0 * pi * mixFrq * aTime);
% 
% %lpf_cutoff_frequency = 0.5e6; %1.25MHz
% %normalized_lpf_cutoff_frequency = lpf_cutoff_frequency / (fs / 2);
% lowpass_filter = designfilt('lowpassfir', ...
%     'FilterOrder',128,...
%     'PassbandFrequency',mixFrq+0.25e6,...
%     'StopbandFrequency',mixFrq+0.5e6,...
%     'DesignMethod','ls',...
%     'PassbandWeight',2,...
%     'StopbandWeight',1,...
%     'SampleRate',fs);
% % fvtool(lowpass_filter);
% IQ = filtfilt(lowpass_filter, IQ);
% % IQ_dnsampled = decimate(IQ,20,'fir');S
% amp = abs(IQ);

HB = hilbert(aLine);
amp = abs(HB);

if plot_on
    figure(); plot(aTime, rf0(:), aTime, rf(:), aTime, abs(HB));
    legend('Raw signal','Filtered signal','IQ-filtered');
end
end